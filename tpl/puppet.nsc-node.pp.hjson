"comment":
'''
Nur trivialer test. Das Sripting und die template Struktur muss erweitert werden, so dass aus dem cfg...json rekursiv
Sectionen gebaut werden koennen. zB

template:

einmal: network globals erzeugen
for all hosts: host eintrag erzeugen
          for all interface:  eintrag erzeugen

Idee: Pseudoeintrag:
"@@dv@@":         "cfg['net']['nics'][--alle--]['dv']",
"@@ip@@":         "cfg['net']['nics'][--alle--]['ip']",
...
..
Fragen: wie for loop ueber dict elemente in template definieren ?

'''

"cfg": {
"@@hn@@":         "hn",
"@@dn@@":         "cfg['net']['dn']",
"@@ns@@":         "cfg['net']['ns']",
"@@dv@@":         "cfg['net']['nics']['nic0']['dv']",
"@@ip@@":         "cfg['net']['nics']['nic0']['ip']",
"@@sn@@":         "cfg['net']['nics']['nic0']['sn']",
"@@gw@@":         "cfg['net']['gw']",
"@@class.main@@": "cfg['classes']['main'][0]",
"@@class.sub@@":  "cfg['classes']['sub'][0]",
}

"tpl-text":
'''
# NSC ###########################

class { 'network::global':
  gateway        => '@@gw@@',
  gatewaydev     => '@@dv@@',
}

node '@@hn@@' {
  class { 'host_classes': main => '@@class.main@@' , sub => '@@class.sub@@'}
  network::if::static { '@@dv@@':
    ensure       => 'up',
    ipaddress    => '@@ip@@',
    netmask      => '@@sn@@',
  }
}
'''
